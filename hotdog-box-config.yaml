sensor:
  - platform: dht
    pin: <SPECIFY_YOUR_PIN>
    temperature:      
        name: "Hotdog Box Temperature"
        id: "temp1"
    humidity:
      name: "Hotdog Box Humidity"
      id: "humid1"
    update_interval: 10s
  - platform: template
    id: "temp2"
    lambda: return id(temp1).state * 1.8+32;
    update_interval: 10s
    internal: true
binary_sensor:
  - platform: gpio
    pin: 12
    name: "Hotdog Box Motion"
    id: "pir1"
    device_class: motion




time:
  - platform: homeassistant
    id: esptime
font:
  - file: 'arial.ttf'
    id: font1
    size: 11

  - file: 'BebasNeue-Regular.ttf'
    id: font2
    size: 36

  - file: 'arial.ttf'
    id: font3
    size: 16
i2c:
  sda: <SPECIFY_YOUR_PIN>
  scl: <SPECIFY_YOUR_PIN>
  scan: false

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    reset_pin: <SPECIFY_any_unused_PIN>
    address: 0x3C
    lambda: |-

      it.strftime(85, 0, id(font3), "%H:%M", id(esptime).now());
      if (id(pir1).state) {
      it.printf(0, 0, id(font1), "ALERT");
      } else {
      it.printf(0, 0, id(font1), "CLEAR");
      }
      if (id(temp1).has_state()) {
      it.printf(0, 50, id(font2), TextAlign::BASELINE_LEFT, "%.1fÂ°", id(temp2).state);
      }
      // Print label
      it.printf(0, 50, id(font1), "Tempature");
    
      if (id(humid1).has_state()) {
        it.printf(127, 50, id(font2), TextAlign::BASELINE_RIGHT , "%.0f%%", id(humid1).state);
      }
      // Print label
      it.printf(83, 50, id(font1), "Humidity");
